2020-12-14 14:40:03.7631|INFO|InventorySystem.Manager.GuideManager|[CallerName]:GetWarehouseProducts;[Request]:GetWarehouseProducts;[Result]:[{"Product":{"Id":12,"Name":"a","Code":"a","Article":"a","Description":"","UnitId":9,"Unit":{"Id":9,"Name":"1","IsDelete":null},"IsDelete":null},"Count":1.0}]
2020-12-14 14:40:09.6172|INFO|InventorySystem.Manager.GuideManager|[CallerName]:GetWarehouseProducts;[Request]:GetWarehouseProducts;[Result]:[{"Product":{"Id":12,"Name":"a","Code":"a","Article":"a","Description":"","UnitId":9,"Unit":{"Id":9,"Name":"1","IsDelete":null},"IsDelete":null},"Count":1.0}]
2020-12-14 14:40:11.2556|INFO|InventorySystem.Manager.GuideManager|[CallerName]:GetWarehouseProducts;[Request]:GetWarehouseProducts;[Result]:[{"Product":{"Id":12,"Name":"a","Code":"a","Article":"a","Description":"","UnitId":9,"Unit":{"Id":9,"Name":"1","IsDelete":null},"IsDelete":null},"Count":1.0}]
2020-12-14 14:40:11.9602|INFO|InventorySystem.Manager.GuideManager|[CallerName]:GetProducts;[Request]:GetProducts/False;[Result]:[{"Id":12,"Name":"a","Code":"a","Article":"a","Description":"","UnitId":9,"Unit":{"Id":9,"Name":"1","IsDelete":null},"IsDelete":null}]
2020-12-14 14:40:12.9473|INFO|InventorySystem.Manager.GuideManager|[CallerName]:GetWarehouseProducts;[Request]:GetWarehouseProducts;[Result]:[{"Product":{"Id":12,"Name":"a","Code":"a","Article":"a","Description":"","UnitId":9,"Unit":{"Id":9,"Name":"1","IsDelete":null},"IsDelete":null},"Count":1.0}]
2020-12-14 14:40:58.4667|INFO|InventorySystem.Manager.GuideManager|[CallerName]:GetPurchaseInvoices;[Request]:GetPurchaseInvoices;[Result]:[{"Id":9,"Number":"12","Date":"2020-11-30T20:58:33.922141","ProviderId":12,"Provider":{"Id":12,"Name":"a","IsDelete":null},"Products":[]}]
2020-12-14 14:40:58.5217|INFO|InventorySystem.Manager.GuideManager|[CallerName]:GetInvoices;[Request]:GetInvoices;[Result]:[{"Id":6,"Number":"1","OrganizationName":"СССОПОК БАЛАНДЫШ","ResponsibleName":"1","Goal":"1","Date":"2020-11-30T20:58:49.8797581","Products":[]}]
2020-12-14 14:40:58.5551|INFO|InventorySystem.Manager.GuideManager|[CallerName]:GetInventories;[Request]:GetInventories;[Result]:[{"Id":8,"Number":"a","ResponsibleName":"a","Date":"2020-11-30T20:58:09.9165189","Products":[]}]
2020-12-14 14:41:00.0272|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-14 14:41:00.1542|INFO|InventorySystem.Manager.GuideManager|[CallerName]:GetProductByPurchaseInvoice;[Request]:GetProductByPurchaseInvoice/byid/9;[Result]:{"Message":"Произошла ошибка.","ExceptionMessage":"Типу \"ObjectContent`1\" не удалось сериализовать текст ответа для типа содержимого \"application/json; charset=utf-8\".","ExceptionType":"System.InvalidOperationException","StackTrace":null,"InnerException":{"Message":"Произошла ошибка.","ExceptionMessage":"Self referencing loop detected with type 'InventorySystem.Contract.ProductWork'. Path '[0].PurchaseInvoice.Products'.","ExceptionType":"Newtonsoft.Json.JsonSerializationException","StackTrace":"   в Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(JsonWriter writer, Object value, JsonProperty property, JsonContract contract, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   в Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   в Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   в Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   в Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   в Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   в Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   в Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   в Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   в Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)\r\n   в Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)\r\n   в System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, Encoding effectiveEncoding)\r\n   в System.Net.Http.Formatting.JsonMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, Encoding effectiveEncoding)\r\n   в System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, HttpContent content)\r\n   в System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)\r\n--- Конец трассировка стека из предыдущего расположения, где возникло исключение ---\r\n   в System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   в System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   в System.Net.Http.HttpContent.<CopyToAsyncCore>d__44.MoveNext()\r\n--- Конец трассировка стека из предыдущего расположения, где возникло исключение ---\r\n   в System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   в System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   в System.Web.Http.WebHost.HttpControllerHandler.<WriteBufferedResponseContentAsync>d__22.MoveNext()"}}
2020-12-14 14:41:00.2254|ERROR|InventorySystem.Manager.GuideManager|GetProductByPurchaseInvoice;[Exception]:Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.IEnumerable`1[InventorySystem.Contract.ProductWork]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'Message', line 1, position 11.
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   в Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   в Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   в Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   в Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   в InventorySystem.Api.ApiManager.GetResponseResult[T](String request, String callerName) в C:\Users\ramil\Source\Repos\InventorySystem\InventorySystem.Api\ApiManager.cs:строка 35
2020-12-14 14:53:47.9259|INFO|InventorySystem.Manager.GuideManager|[CallerName]:GetProducts;[Request]:GetProducts/False;[Result]:[{"Id":12,"Name":"a","Code":"a","Article":"a","Description":"","UnitId":9,"Unit":{"Id":9,"Name":"1","IsDelete":null},"IsDelete":null}]
2020-12-14 14:53:49.3244|INFO|InventorySystem.Manager.GuideManager|[CallerName]:GetWarehouseProducts;[Request]:GetWarehouseProducts;[Result]:[{"Product":{"Id":12,"Name":"a","Code":"a","Article":"a","Description":"","UnitId":9,"Unit":{"Id":9,"Name":"1","IsDelete":null},"IsDelete":null},"Count":1.0}]
2020-12-14 14:53:49.9453|INFO|InventorySystem.Manager.GuideManager|[CallerName]:GetPurchaseInvoices;[Request]:GetPurchaseInvoices;[Result]:[{"Id":9,"Number":"12","Date":"2020-11-30T20:58:33.922141","ProviderId":12,"Provider":{"Id":12,"Name":"a","IsDelete":null},"Products":[]}]
2020-12-14 14:53:49.9662|INFO|InventorySystem.Manager.GuideManager|[CallerName]:GetInvoices;[Request]:GetInvoices;[Result]:[{"Id":6,"Number":"1","OrganizationName":"СССОПОК БАЛАНДЫШ","ResponsibleName":"1","Goal":"1","Date":"2020-11-30T20:58:49.8797581","Products":[]}]
2020-12-14 14:53:49.9867|INFO|InventorySystem.Manager.GuideManager|[CallerName]:GetInventories;[Request]:GetInventories;[Result]:[{"Id":8,"Number":"a","ResponsibleName":"a","Date":"2020-11-30T20:58:09.9165189","Products":[]}]
