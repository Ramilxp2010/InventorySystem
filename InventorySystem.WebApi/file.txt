2020-11-30 21:03:24.4289|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-01 21:51:50.1300|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-01 21:53:22.9223|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-01 21:56:10.5782|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-01 21:57:12.9915|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-01 21:57:34.9435|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-01 21:57:52.7488|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-01 21:59:56.6315|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-01 22:00:17.9026|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-04 08:18:20.6844|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-04 08:19:07.2019|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-04 08:19:25.6739|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-04 08:29:57.6813|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-04 08:30:10.4783|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-04 08:31:44.6294|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-04 08:36:21.7557|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-04 08:36:37.8419|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-04 08:39:21.3996|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-04 08:40:09.7110|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-04 08:42:08.0474|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-04 08:45:33.7495|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-04 08:53:56.0330|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-04 08:58:05.5761|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-06 13:43:26.8419|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-06 13:43:27.1373|INFO|InventorySystem.Manager.GuideManager|Message from UI: GetProductByPurchaseInvoice Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.IEnumerable`1[InventorySystem.Contract.ProductWork]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'Message', line 1, position 11.
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   в Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   в Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   в Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   в Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   в InventorySystem.Api.ApiManager.GetProductByPurchaseInvoice(PurchaseInvoice item) в C:\Users\ramil\Source\Repos\InventorySystem\InventorySystem.Api\ApiManager.cs:строка 203
2020-12-11 07:38:46.5208|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-11 07:40:07.1475|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-11 07:45:21.0593|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-11 07:45:41.5062|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-11 07:54:03.4329|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-11 08:00:21.2316|INFO|InventorySystem.Manager.PurchaseInvoiceManager|Try to get ProductWorks by Id 9
2020-12-11 08:00:21.5347|INFO|InventorySystem.Manager.GuideManager|Message from UI: GetProductByPurchaseInvoice Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.IEnumerable`1[InventorySystem.Contract.ProductWork]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'Message', line 1, position 11.
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   в Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   в Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   в Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   в Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   в InventorySystem.Api.ApiManager.GetResponseResult[T](String request, String callerName) в C:\Users\ramil\Source\Repos\InventorySystem\InventorySystem.Api\ApiManager.cs:строка 29
2020-12-11 08:00:21.5347|ERROR|InventorySystem.Manager.GuideManager|Message from UI: GetProductByPurchaseInvoice Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.IEnumerable`1[InventorySystem.Contract.ProductWork]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'Message', line 1, position 11.
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   в Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   в Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   в Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   в Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   в InventorySystem.Api.ApiManager.GetResponseResult[T](String request, String callerName) в C:\Users\ramil\Source\Repos\InventorySystem\InventorySystem.Api\ApiManager.cs:строка 29
2020-12-11 08:00:21.5387|FATAL|InventorySystem.Manager.GuideManager|Message from UI: GetProductByPurchaseInvoice Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.IEnumerable`1[InventorySystem.Contract.ProductWork]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'Message', line 1, position 11.
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   в Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   в Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   в Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   в Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   в InventorySystem.Api.ApiManager.GetResponseResult[T](String request, String callerName) в C:\Users\ramil\Source\Repos\InventorySystem\InventorySystem.Api\ApiManager.cs:строка 29
2020-12-11 08:00:21.5387|WARN|InventorySystem.Manager.GuideManager|Message from UI: GetProductByPurchaseInvoice Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.IEnumerable`1[InventorySystem.Contract.ProductWork]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'Message', line 1, position 11.
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   в Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   в Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   в Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   в Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   в InventorySystem.Api.ApiManager.GetResponseResult[T](String request, String callerName) в C:\Users\ramil\Source\Repos\InventorySystem\InventorySystem.Api\ApiManager.cs:строка 29
